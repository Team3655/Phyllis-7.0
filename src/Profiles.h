///////////////////////////////////////////////////////////////////////////////
//
// Profiles.h
//
//  Created on: Feb 25, 2017
//      Author: Silas A.
//
///////////////////////////////////////////////////////////////////////////////

#ifndef PROFILES_H
#define PROFILES_H

typedef int BOOL;

// Wrapper structure for profile
struct Profile
{
	BOOL turn;
	int size;
	const double (*profile)[3];
	bool split;

	Profile(BOOL turn, int size, const double (*profile)[3], bool split) :
		turn(turn), size(size), profile(profile), split(split) {}

	Profile() {}
};

// Function for creating a profile struct
// It creates profile from start/end points
static Profile* create_profile(Profile* p, BOOL turn, int size, const double (*profile)[3], int start, int end, bool split)
{
	int newSize = end - start;
	double (*pr)[3] = new double[newSize][3];
	for (int i = start; i < newSize; i++)
	{
		pr[0][i] = profile[0][i];
		pr[1][i] = profile[1][i];
		pr[2][i] = profile[2][i];
	}
	p->turn = turn;
	p->size = newSize;
	p->profile = pr;
	p->split = split;
	return p;
}

// [position] [velocity] [duration(ms)]
// Profiles for driving to the peg
const double MpPrePeg[][3] =
{
	{  0.0, 0.0, 20 }
};
const int MpPrePegSize = 1;

// Profiles for driving from the peg
const double MpPostPeg[][3] =
{
	{  0.0, 0.0, 20 }
};
const int MpPostPegSize = 1;

// A 180 degree turn
const double Mp180Turn[][3] =
{
	{0,	0	,20},
	{0.000555555555555556,	3.333333333	,20},
	{0.0025,	8.333333333	,20},
	{0.00638888888888889,	15	,20},
	{0.0127777777777778,	23.33333333	,20},
	{0.0222222222222222,	33.33333333	,20},
	{0.0352777777777778,	45	,20},
	{0.0525,	58.33333333	,20},
	{0.0744444444444445,	73.33333333	,20},
	{0.100833333333333,	85	,20},
	{0.130833333333333,	95	,20},
	{0.163888888888889,	103.3333333	,20},
	{0.199444444444444,	110	,20},
	{0.236944444444444,	115	,20},
	{0.275833333333333,	118.3333333	,20},
	{0.315555555555556,	120	,20},
	{0.355555555555556,	120	,20},
	{0.395555555555556,	120	,20},
	{0.435555555555556,	120	,20},
	{0.475555555555556,	120	,20},
	{0.515555555555556,	120	,20},
	{0.555555555555556,	120	,20},
	{0.595555555555556,	120	,20},
	{0.635555555555556,	120	,20},
	{0.675555555555556,	120	,20},
	{0.715555555555556,	120	,20},
	{0.755555555555556,	120	,20},
	{0.795555555555556,	120	,20},
	{0.835555555555556,	120	,20},
	{0.875555555555556,	120	,20},
	{0.915555555555556,	120	,20},
	{0.955555555555556,	120	,20},
	{0.995555555555556,	120	,20},
	{1.03555555555556,	120	,20},
	{1.07555555555556,	120	,20},
	{1.11555555555556,	120	,20},
	{1.15555555555556,	120	,20},
	{1.19555555555556,	120	,20},
	{1.23555555555556,	120	,20},
	{1.27555555555556,	120	,20},
	{1.31555555555556,	120	,20},
	{1.35555555555556,	120	,20},
	{1.39555555555556,	120	,20},
	{1.43555555555556,	120	,20},
	{1.47555555555556,	120	,20},
	{1.51555555555556,	120	,20},
	{1.55555555555556,	120	,20},
	{1.59555555555556,	120	,20},
	{1.63555555555556,	120	,20},
	{1.67555555555556,	120	,20},
	{1.71555555555556,	120	,20},
	{1.75555555555556,	120	,20},
	{1.79555555555556,	120	,20},
	{1.83555555555556,	120	,20},
	{1.87555555555556,	120	,20},
	{1.91555555555556,	120	,20},
	{1.95555555555556,	120	,20},
	{1.99555555555556,	120	,20},
	{2.035,	116.6666667	,20},
	{2.07305555555556,	111.6666667	,20},
	{2.10916666666667,	105	,20},
	{2.14277777777778,	96.66666667	,20},
	{2.17333333333333,	86.66666667	,20},
	{2.20027777777778,	75	,20},
	{2.22305555555556,	61.66666667	,20},
	{2.24111111111111,	46.66666667	,20},
	{2.25472222222222,	35	,20},
	{2.26472222222222,	25	,20},
	{2.27166666666667,	16.66666667	,20},
	{2.27611111111111,	10	,20},
	{2.27861111111111,	5	,20},
	{2.27972222222222,	1.666666667	,20},
	{2.28,	0	,20}
};
const int Mp180TurnSize = 73;

// A 90 degree turn
const double Mp90Turn[][3] =
{
	{0,	0	,20},
	{0.000333333333333333,	2	,20},
	{0.0015,	5	,20},
	{0.00383333333333333,	9	,20},
	{0.00766666666666667,	14	,20},
	{0.0133333333333333,	20	,20},
	{0.0211666666666667,	27	,20},
	{0.0315,	35	,20},
	{0.0446666666666667,	44	,20},
	{0.0605,	51	,20},
	{0.0785,	57	,20},
	{0.0983333333333333,	62	,20},
	{0.119666666666667,	66	,20},
	{0.142166666666667,	69	,20},
	{0.1655,	71	,20},
	{0.189333333333333,	72	,20},
	{0.213333333333333,	72	,20},
	{0.237333333333333,	72	,20},
	{0.261333333333333,	72	,20},
	{0.285333333333333,	72	,20},
	{0.309333333333333,	72	,20},
	{0.333333333333333,	72	,20},
	{0.357333333333333,	72	,20},
	{0.381333333333333,	72	,20},
	{0.405333333333333,	72	,20},
	{0.429333333333333,	72	,20},
	{0.453333333333333,	72	,20},
	{0.477333333333333,	72	,20},
	{0.501333333333334,	72	,20},
	{0.525333333333334,	72	,20},
	{0.549333333333334,	72	,20},
	{0.573333333333334,	72	,20},
	{0.597333333333334,	72	,20},
	{0.621333333333334,	72	,20},
	{0.645333333333334,	72	,20},
	{0.669333333333334,	72	,20},
	{0.693333333333334,	72	,20},
	{0.717333333333334,	72	,20},
	{0.741333333333334,	72	,20},
	{0.765333333333334,	72	,20},
	{0.789333333333334,	72	,20},
	{0.813333333333334,	72	,20},
	{0.837333333333334,	72	,20},
	{0.861333333333334,	72	,20},
	{0.885333333333334,	72	,20},
	{0.909333333333334,	72	,20},
	{0.933333333333334,	72	,20},
	{0.957333333333334,	72	,20},
	{0.981333333333334,	72	,20},
	{1.005,	70	,20},
	{1.02783333333333,	67	,20},
	{1.0495,	63	,20},
	{1.06966666666667,	58	,20},
	{1.088,	52	,20},
	{1.10416666666667,	45	,20},
	{1.11783333333333,	37	,20},
	{1.12866666666667,	28	,20},
	{1.13683333333333,	21	,20},
	{1.14283333333333,	15	,20},
	{1.147,	10	,20},
	{1.14966666666667,	6	,20},
	{1.15116666666667,	3	,20},
	{1.15183333333333,	1	,20},
	{1.152,	0	,20}
};
const int Mp90TurnSize = 64;

// A 45 degree Turn
const double Mp45Turn[][3] =
{
	{0,	0	,20},
	{0.000333333333333333,	2	,20},
	{0.0015,	5	,20},
	{0.00383333333333333,	9	,20},
	{0.00766666666666667,	14	,20},
	{0.0133333333333333,	20	,20},
	{0.0211666666666667,	27	,20},
	{0.0315,	35	,20},
	{0.0446666666666667,	44	,20},
	{0.0605,	51	,20},
	{0.0785,	57	,20},
	{0.0983333333333333,	62	,20},
	{0.119666666666667,	66	,20},
	{0.142166666666667,	69	,20},
	{0.1655, 71	,20},
	{0.189333333333333,	72	,20},
	{0.213333333333333,	72	,20},
	{0.237333333333333,	72	,20},
	{0.261333333333333,	72	,20},
	{0.285333333333333,	72	,20},
	{0.309333333333333,	72	,20},
	{0.333333333333333,	72	,20},
	{0.357333333333333,	72	,20},
	{0.381333333333333,	72	,20},
	{0.405333333333333,	72	,20},
	{0.429,	70	,20},
	{0.451833333333333,	67	,20},
	{0.4735,	63	,20},
	{0.493666666666667,	58	,20},
	{0.512,	52	,20},
	{0.528166666666667,	45	,20},
	{0.541833333333333,	37	,20},
	{0.552666666666667,	28	,20},
	{0.560833333333334,	21	,20},
	{0.566833333333334,	15	,20},
	{0.571,	10	,20},
	{0.573666666666667,	6	,20},
	{0.575166666666667,	3	,20},
	{0.575833333333334,	1	,20},
	{0.576,	0	,20}
};
const int Mp45TurnSize = 40;

// Test
const double MpTest[][3] = {
		{0,	0	,20},
		{0.000181818181818182,	1.090909091	,20},
		{0.000818181818181818,	2.727272727	,20},
		{0.00209090909090909,	4.909090909	,20},
		{0.00418181818181818,	7.636363636	,20},
		{0.00727272727272727,	10.90909091	,20},
		{0.0115454545454545,	14.72727273	,20},
		{0.0171818181818182,	19.09090909	,20},
		{0.0243636363636364,	24	,20},
		{0.0332727272727273,	29.45454545	,20},
		{0.0440909090909091,	35.45454545	,20},
		{0.0567272727272727,	40.36363636	,20},
		{0.0709090909090909,	44.72727273	,20},
		{0.0864545454545455,	48.54545455	,20},
		{0.103181818181818,	51.81818182	,20},
		{0.120909090909091,	54.54545455	,20},
		{0.139454545454545,	56.72727273	,20},
		{0.158636363636364,	58.36363636	,20},
		{0.178272727272727,	59.45454545	,20},
		{0.198181818181818,	60	,20},
		{0.218181818181818,	60	,20},
		{0.238181818181818,	60	,20},
		{0.258181818181818,	60	,20},
		{0.278181818181818,	60	,20},
		{0.298181818181818,	60	,20},
		{0.318181818181818,	60	,20},
		{0.338181818181818,	60	,20},
		{0.358181818181818,	60	,20},
		{0.378181818181818,	60	,20},
		{0.398181818181818,	60	,20},
		{0.418181818181818,	60	,20},
		{0.438181818181818,	60	,20},
		{0.458181818181818,	60	,20},
		{0.478181818181818,	60	,20},
		{0.498181818181818,	60	,20},
		{0.518181818181818,	60	,20},
		{0.538181818181818,	60	,20},
		{0.558181818181818,	60	,20},
		{0.578181818181818,	60	,20},
		{0.598181818181818,	60	,20},
		{0.618181818181818,	60	,20},
		{0.638181818181819,	60	,20},
		{0.658181818181819,	60	,20},
		{0.678181818181819,	60	,20},
		{0.698181818181819,	60	,20},
		{0.718181818181819,	60	,20},
		{0.738181818181819,	60	,20},
		{0.758181818181819,	60	,20},
		{0.778181818181819,	60	,20},
		{0.798181818181819,	60	,20},
		{0.818181818181819,	60	,20},
		{0.838000000000001,	58.90909091	,20},
		{0.857363636363637,	57.27272727	,20},
		{0.87609090909091,	55.09090909	,20},
		{0.894,	52.36363636	,20},
		{0.910909090909091,	49.09090909	,20},
		{0.926636363636364,	45.27272727	,20},
		{0.941,	40.90909091	,20},
		{0.953818181818182,	36	,20},
		{0.964909090909091,	30.54545455	,20},
		{0.974090909090909,	24.54545455	,20},
		{0.981454545454546,	19.63636364	,20},
		{0.987272727272728,	15.27272727	,20},
		{0.991727272727273,	11.45454545	,20},
		{0.995,	8.181818182	,20},
		{0.997272727272728,	5.454545455	,20},
		{0.998727272727273,	3.272727273	,20},
		{0.999545454545455,	1.636363636	,20},
		{0.999909090909091,	0.545454545	,20},
		{1,	7.5697E-16	,20},
		{1,	0	,20}};

const int MpTestSize = 71;

#endif // PROFILES_H
